'use strict'

const { test } = require('tap')
const { EventEmitter } = require('events')
const propagate = require('..')

test('propagates events', t => {
  t.plan(16)
  const ee1 = new EventEmitter()
  const ee2 = new EventEmitter()
  propagate(ee1, ee2)

  ee2.on('event-1', (a, b, c) => {
    t.equal(a, 'a')
    t.equal(b, 'b')
    t.equal(c, undefined)
  })

  ee2.on('event-2', (a, b, c) => {
    t.equal(a, 'c')
    t.equal(b, 'd')
    t.equal(c, undefined)
  })

  t.true(ee1.emit('event-1', 'a', 'b'))
  t.true(ee1.emit('event-1', 'a', 'b'))
  t.true(ee1.emit('event-2', 'c', 'd'))
  t.true(ee1.emit('event-2', 'c', 'd'))
})

test('propagates can end', t => {
  t.plan(3)

  const ee1 = new EventEmitter()
  const ee2 = new EventEmitter()
  const prop = propagate(ee1, ee2)

  ee2.on('event', () => {
    t.ok('true', 'propagated')
  })

  t.true(ee1.emit('event'))
  prop.end()
  t.false(ee1.emit('event'))
})

test('after propagation old one still emits', t => {
  t.plan(4)

  const ee1 = new EventEmitter()
  co