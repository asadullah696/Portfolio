"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTrustedPublishers = exports.getExtensionRegistry = void 0;
const _ = require("lodash");
const logger_1 = require("../logger");
const apiv2_1 = require("../apiv2");
const api_1 = require("../api");
const EXTENSIONS_REGISTRY_ENDPOINT = "/extensions.json";
async function getExtensionRegistry(onlyFeatured) {
    const client = new apiv2_1.Client({ urlPrefix: api_1.firebaseExtensionsRegistryOrigin });
    const res = await client.get(EXTENSIONS_REGISTRY_ENDPOINT);
    const extensions = _.get(res, "body.mods");
    if (onlyFeatured) {
        const featuredList = _.get(res, "body.featured.discover");
        return _.pickBy(extensions, (_entry, extensionName) => {
            return _.includes(featuredList, extensionName);
        });
    }
    return extensions;
}
exports.getExtensionRegistry = getExtensionRegistry;
async function getTrustedPublishers() {
    let registry;
    try {
        registry = await getExtensionRegistry();
    }
    catch (err) {
        logger_1.logger.debug("Couldn't get extensions registry, assuming no trusted publishers except Firebase.");
        return ["firebase"];
    }
    const publisherIds = new Set();
    for (const entry in registry) {
        publisherIds.add(registry[entry].publisher);
    }
    return Array.from(publisherIds);
}
exports.getTrustedPublishers = getTrustedPublishers;
